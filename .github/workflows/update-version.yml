name: Update Version Numbers

'on':
  push:
    tags:
      - 'v*'

jobs:
  update-versions:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag
        id: get_version
        run: |
          # Get tag name (e.g., v1.0.2-pre7)
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          # Remove 'v' prefix (e.g., 1.0.2-pre7)
          VERSION="${TAG_NAME#v}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Extracted version: $VERSION"

      - name: Update manifest.json
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          sed -i 's/"version": "[^"]*"/"version": "'"$VERSION"'"/' custom_components/xschedule/manifest.json
          echo "âœ“ Updated manifest.json to version $VERSION"

      - name: Update package.json
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          sed -i 's/"version": "[^"]*"/"version": "'"$VERSION"'"/' package.json
          echo "âœ“ Updated package.json to version $VERSION"

      - name: Update xschedule-card.js
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          sed -i 's/Version [0-9][^"]*  /Version '"$VERSION"'  /' src/xschedule-card.js
          echo "âœ“ Updated xschedule-card.js console log to version $VERSION"

      - name: Update xschedule-playlist-browser.js
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          sed -i 's/Version [0-9][^"]*  /Version '"$VERSION"'  /' src/xschedule-playlist-browser.js
          echo "âœ“ Updated xschedule-playlist-browser.js console log to version $VERSION"

      - name: Verify changes
        run: |
          echo "=== Verification of Version Updates ==="
          echo ""
          echo "manifest.json:"
          grep '"version"' custom_components/xschedule/manifest.json
          echo ""
          echo "package.json:"
          grep '"version"' package.json | head -1
          echo ""
          echo "xschedule-card.js:"
          grep 'Version [0-9]' src/xschedule-card.js
          echo ""
          echo "xschedule-playlist-browser.js:"
          grep 'Version [0-9]' src/xschedule-playlist-browser.js
          echo ""
          echo "âœ“ All version strings updated successfully"

      - name: Commit and push changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add custom_components/xschedule/manifest.json
          git add package.json
          git add src/xschedule-card.js
          git add src/xschedule-playlist-browser.js

          if git diff --staged --quiet; then
            echo "No changes to commit (versions already up to date)"
          else
            git commit -m "chore: Update version to ${{ steps.get_version.outputs.version }}

Auto-updated by GitHub Actions on release tag creation.

Files updated:
- custom_components/xschedule/manifest.json
- package.json
- src/xschedule-card.js
- src/xschedule-playlist-browser.js

ðŸ¤– Generated by update-version workflow"
            git push origin main
            echo "âœ“ Changes committed and pushed to main branch"
          fi
